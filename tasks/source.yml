---
- name: Check if the current PostMaster version is {{ postmaster_version }}
  command: /opt/postmaster/env/bin/python /opt/postmaster/git/manage.py version
  register: postmaster_version_check
  failed_when: False
  changed_when: False

- name: Setting the postmaster_desired_version variable
  set_fact:
    postmaster_desired_version: "{{ postmaster_version_check.rc == 0 and postmaster_version_check.stdout == postmaster_version }}"

- block:
  - name: "Download the source of PostMaster {{ postmaster_version }}"
    get_url:
      url: "https://github.com/StackFocus/PostMaster/archive/{{ postmaster_version }}.tar.gz"
      dest: /opt/postmaster/postmaster_latest.tar.gz
      mode: 0770

  - name: Extract the latest PostMaster
    unarchive:
      src: /opt/postmaster/postmaster_latest.tar.gz
      dest: /opt/postmaster/
      owner: postmaster
      group: www-data
      mode: 0770
      remote_src: yes

  - name: Removing /opt/postmaster/git if it exists
    file:
      path: /opt/postmaster/git
      state: absent

  # This has to be the command module because Ansible doesn't support remote copies that are recursive
  - name: Move the extracted PostMaster contents to /opt/postmaster/git
    command: "mv /opt/postmaster/PostMaster-{{ postmaster_version[1:] }} /opt/postmaster/git"
    notify: reload apache

  - name: Remove the PostMaster archive
    file:
      path: /opt/postmaster/postmaster_latest.tar.gz
      state: absent
  when: not postmaster_desired_version
